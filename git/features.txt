> All Constructors made private! Construction handled by the Spring only and avoided public static members
> Synchronization: Incrementing operations made atomic + synchronization added whenever needed
> Handled Exceptions And Retried calls from ElasticSearch with exponential backoff + added Jitter, and limit them to maximum number of trials
> Dumped the unsuccessful records to the database to avoid overwhelming the elastic search client for failing requests
> Exponential Backoff + Jitter on Fetching from NewsRiver
> RateLimiter applied
> Parallel producers, no equal distribution of work necessarily!
> Parallel consumers
> Generalised logs. Logs indicating some error/failed operation starts with FAILED
> Secret API Key: Picked from local DB (Can be improved by : time based cache)
> Failed requests: Safely Dumped to the Database
